/*  conquering-codeforces
 *  day 21. #266B
 *
 *  Задача: На перемене в школьной столовой образовалась очередь из n человек, в которой стоят мальчики и девочки.
 *          Изначально ребята встали в таком порядке, в котором они забежали в столовую. Однако через некоторое время
 *          мальчикам стало неловко, что они стоят в очереди перед девочками, и они стали каждую секунду пропускать
 *          девочек вперед. Опишем процесс более точно. Пусть позиции в очереди последовательно пронумерованы целыми
 *          числами от 1 до n, причем тот, кто стоит на позиции номер 1 обслуживается первым. Тогда, если в момент
 *          времени x на i-ой позиции стоит мальчик, а на (i + 1)-ой — девочка, то в момент времени x + 1 на i-ой
 *          позиции будет находиться девочка, а на (i + 1)-ой — мальчик. Моменты времени заданы в секундах.
 *          Вам задано расположение в начальный момент времени, определите, как будет выглядеть очередь через t секунд.
 *  Входные данные: В первой строке заданы два целых числа n и t (1 ≤ n, t ≤ 50), обозначающие количество ребят в
 *                  очереди и время, спустя которое требуется определить, как будет выглядеть очередь.
 *                  В следующей строке задана строка s, обозначающая начальную расстановку школьников. Если на i-ой
 *                  позиции в очереди стоит мальчик, то i-ый символ строки s равен «B», иначе i-ый символ равен «G».
 *  Выходные данные: Выведите строку a, обозначающую расположение ребят в очереди спустя t секунд.
 */

import java.util.Scanner;

public class CF266B
{
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();
        int t = scanner.nextInt();
        scanner.nextLine();

        char[] letters = scanner.nextLine().toCharArray();

        for (int i = 0; i < t; i++) {
            for (int j = 0; j < letters.length - 1; j++) {
                if (letters[j] == 'B' && letters[i + 1] == 'G') {
                    char temp = letters[i];
                    letters[i] = letters[i + 1];
                    letters[i + 1] = temp;

                    j += 1;
                }
            }
        }
        
    }
}
