/*  conquering-codeforces
 *  day 49. #500A
 *
 *  Задача: В Линейном мире есть n ячеек, пронумерованных целыми числами от 1 до n, уложенных в виде доски размером
 *          1 × n. В ячейках живут люди. Однако, передвигаться между различными ячейками сложно, ведь выйти из ячейки —
 *          дело непростое. В то же время, люди хотят знакомиться с людьми, живущими в других ячейках. И вот, придумали
 *          систему транспорта для передвижения между ячейками. Сперва он задумывают n - 1 положительных целых чисел
 *          a1, a2, ..., an - 1. Для каждого целого числа i, где 1 ≤ i ≤ n - 1, выполняется условие 1 ≤ ai ≤ n - i.
 *          Затем создают n - 1 порталов, пронумерованных целыми числами от 1 до n - 1. Из них i-й (1 ≤ i ≤ n - 1)
 *          портал соединяет ячейку номер i и ячейку номер (i + ai), т. е. с его помощью можно путешествовать из ячейки
 *          i в ячейку (i + ai). К сожалению, портал не работает в обратную сторону, то есть нельзя пройти из ячейки
 *          (i + ai) в ячейку i по i-му порталу. Легко заметить, что из-за условия 1 ≤ ai ≤ n - i нельзя покинуть
 *          Линейный мир, пользуясь порталами.
 *          Я нахожусь в ячейке 1 и хочу пройти в ячейку t. Однако я не знаю, могу ли я там оказаться. Пожалуйста,
 *          определите, могу ли я пройти в ячейку t, пользуясь только построенной системой транспорта.
 *  Входные данные: В первой строке записано два целых числа через пробел, n (3 ≤ n ≤ 3 × 10^4) и t (2 ≤ t ≤ n) —
 *                  количество ячеек и номер ячейки, в которую я хочу попасть.
 *                  Во второй строке записано n - 1 целых чисел через пробел a1, a2, ..., an - 1 (1 ≤ ai ≤ n - i).
 *                  Гарантируется, что пользуясь данной транспортной системой, покинуть Линейный мир нельзя.
 *  Выходные данные: Если я могу дойти до ячейки t по данной транспортной системе, выведите "YES". В противном случае,
 *                   выведите "NO".
 */

#include <iostream>
#include <vector>

int main()
{
    std::vector<int> way;

    int n;
    std::cin >> n;

    int t;
    std::cin >> t;

    int a;
    int k = 0;

    t--;

    for(int i = 0; i < n; i++)
    {
        std::cin >> a;
        way.push_back(a);
    }

    while(t > k)
    {
        k += way[k];
    }

    if(t == k) {
        std::cout << "YES" << std::endl;
    } else {
        std::cout << "NO" << std::endl;
    }

    return 0;
}