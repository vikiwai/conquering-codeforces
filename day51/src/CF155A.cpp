/*  conquering-codeforces
 *  day 51. #155A
 *
 *  Задача: Однажды Вася решил собрать результаты всех выступлений своего любимого участника и посмотреть на рост его
 *          крутости. Для каждого соревнования с его участием он выписал одно неотрицательное число — количество баллов,
 *          набранных участником в соревновании. Баллы за соревнования Вася выписывал в том порядке, в котором
 *          соревнования проходили. Вася считает выступление участника удивительным в двух случаях: если участник
 *          установит новый рекорд или анти-рекорд по количеству набранных баллов. Иными словами, удивительно, если
 *          участник набирает на соревновании строго больше баллов, чем на каждом из предыдущих соревнований. Также
 *          удивительно, если участник набирает на соревновании строго меньше баллов, чем на каждом из предыдущих
 *          соревнований. Первое выступление удивительным не считается.
 *          Теперь Вася хочет посчитать, сколько всего было удивительных выступлений за всю карьеру участника. Но
 *          список набранных баллов получился длинный, а программировать он не умеет. Поэтому он просит Вас помочь ему.
 *  Входные данные: В первой строке записано единственное целое число n (1 ≤ n ≤ 1000) — количество выступлений
 *                  участника.
 *                  В следующей строке записано n целых неотрицательных чисел, разделенных пробелами — баллы,
 *                  набранные участником, в хронологическом порядке. Все баллы не превосходят 10000.
 *  Выходные данные: Выведите единственное число — количество удивительных выступлений за всю карьеру участника.
 */

#include <iostream>

int main()
{
    int n;
    std::cin >> n;

    int* array = new int[n];
    for(int i = 0; i < n; i++) {
        std::cin >> array[n];
    }

    int min = array[0];
    int max = array[0];

    int k = 0;

    for(int j = 1; j < n; ++j) {
        if(array[j] < min) {
            min = array[j];
            k++;
        } else if (array[j] > max) {
            max = array[j];
            k++;
        }
    }

    std::cout << k << std::endl;
    
    return 0;
}